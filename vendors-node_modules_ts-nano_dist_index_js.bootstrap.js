"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdasha_web"] = self["webpackChunkdasha_web"] || []).push([["vendors-node_modules_ts-nano_dist_index_js"],{

/***/ "./node_modules/ts-nano/dist/Editor.js":
/*!*********************************************!*\
  !*** ./node_modules/ts-nano/dist/Editor.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Utils_1 = __importDefault(__webpack_require__(/*! ./Utils */ \"./node_modules/ts-nano/dist/Utils.js\"));\nvar Rope_1 = __importDefault(__webpack_require__(/*! ./Rope */ \"./node_modules/ts-nano/dist/Rope.js\"));\nvar Editor = /** @class */ (function () {\n    function Editor(_elem, content) {\n        if (content === void 0) { content = ''; }\n        this._elem = _elem;\n        this._highlights = [];\n        this._cursor = [0, 0, 0];\n        this._delegator = document.createDocumentFragment();\n        this._elem.addEventListener('keydown', this.onkeydown.bind(this));\n        this._elem.addEventListener('paste', this.onpaste.bind(this));\n        this._rope = Rope_1.default.leaf(content);\n        this.render();\n    }\n    Editor.prototype.addEventListener = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._delegator).addEventListener.apply(_a, __spreadArray([], __read(args)));\n    };\n    Editor.prototype.dispatchEvent = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (_a = this._delegator).dispatchEvent.apply(_a, __spreadArray([], __read(args)));\n    };\n    Editor.prototype.removeEventListener = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._delegator).removeEventListener.apply(_a, __spreadArray([], __read(args)));\n    };\n    Object.defineProperty(Editor.prototype, \"content\", {\n        get: function () {\n            return this._rope.toString();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Editor.prototype, \"highlights\", {\n        get: function () {\n            return Array.from(this._highlights);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.addHighlight = function (span) {\n        this._highlights.push(span);\n        this.render();\n        this.dispatchEvent(new Event('highlightschange'));\n    };\n    Editor.prototype.removeHighlight = function (span) {\n        var idx = this._highlights.findIndex(function (highlight) { return (span[0] === highlight[0]\n            && span[1] === highlight[1]\n            && span[2] === highlight[2]); });\n        if (idx !== -1) {\n            this._highlights.splice(idx, 1);\n            this.render();\n            this.dispatchEvent(new Event('highlightschange'));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Editor.prototype.clearHighlights = function () {\n        this._highlights = [];\n        this.render();\n        this.dispatchEvent(new Event('highlightschange'));\n    };\n    Editor.prototype.onkeydown = function (e) {\n        var _a, _b;\n        if (e.key === 'v' && (e.ctrlKey || e.metaKey)) { // paste\n            return;\n        }\n        if (e.key.length === 1) {\n            this._rope.insert(this._rope.lineToChar(this._cursor[2]) + this._cursor[0], e.key);\n            this._cursor[0] += 1;\n            this._cursor[1] = this._cursor[0];\n            this.render();\n            this.dispatchEvent(new Event('textchange'));\n            return;\n        }\n        switch (e.key) {\n            case 'ArrowLeft':\n                if (this._cursor[0] > 0) {\n                    this._cursor[0] -= 1;\n                    this._cursor[1] = this._cursor[0];\n                    this.render();\n                }\n                else {\n                    this._cursor[1] = this._cursor[0];\n                }\n                break;\n            case 'ArrowRight':\n                if (this._cursor[0] < Array.from(this._rope.lines())[this._cursor[2]].length) {\n                    this._cursor[0] += 1;\n                    this._cursor[1] = this._cursor[0];\n                    this.render();\n                }\n                else {\n                    this._cursor[1] = this._cursor[0];\n                }\n                break;\n            case 'ArrowUp':\n                if (this._cursor[2] > 0) {\n                    this._cursor[2] -= 1;\n                    this._cursor[0] = Math.min(this._cursor[1], Array.from(this._rope.lines())[this._cursor[2]].length);\n                    this.render();\n                }\n                break;\n            case 'ArrowDown':\n                if (this._cursor[2] < Array.from(this._rope.lines()).length - 1) {\n                    this._cursor[2] += 1;\n                    this._cursor[0] = Math.min(this._cursor[1], (_a = Array.from(this._rope.lines())[this._cursor[2]]) === null || _a === void 0 ? void 0 : _a.length);\n                    this.render();\n                }\n                break;\n            case 'Backspace':\n                if (this._rope.lineToChar(this._cursor[2]) + this._cursor[0] > 0) {\n                    var len = (_b = Array.from(this._rope.lines())[this._cursor[2] - 1]) === null || _b === void 0 ? void 0 : _b.length;\n                    this._rope.remove(this._rope.lineToChar(this._cursor[2]) + this._cursor[0] - 1);\n                    if (this._cursor[0] > 0) {\n                        this._cursor[1] = this._cursor[0] -= 1;\n                    }\n                    else if (this._cursor[2] > 0) {\n                        this._cursor[2] -= 1;\n                        this._cursor[1] = this._cursor[0] = len;\n                    }\n                    this.render();\n                    this.dispatchEvent(new Event('textchange'));\n                }\n                break;\n            case 'Enter':\n                this._rope.insert(this._rope.lineToChar(this._cursor[2]) + this._cursor[0], '\\n');\n                this._cursor[1] = this._cursor[0] = 0;\n                this._cursor[2] += 1;\n                this.render();\n                this.dispatchEvent(new Event('textchange'));\n                break;\n            default:\n                break;\n        }\n    };\n    Editor.prototype.onpaste = function (e) {\n        if (e.clipboardData) {\n            var idx = this._rope.lineToChar(this._cursor[2]) + this._cursor[0];\n            var text = e.clipboardData.getData('text');\n            this._rope.insert(idx, text);\n            this._cursor[2] = this._rope.charToLine(idx + text.length);\n            this._cursor[0] = this._cursor[1] = idx + text.length - this._rope.lineToChar(this._cursor[2]);\n            this.render();\n            this.dispatchEvent(new Event('textchange'));\n        }\n    };\n    Editor.prototype.render = function () {\n        var e_1, _a, e_2, _b, e_3, _c;\n        while (this._elem.firstChild) {\n            this._elem.removeChild(this._elem.firstChild);\n        }\n        try {\n            for (var _d = __values(Utils_1.default.enumerate(this._rope.lineIndices())), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var _f = __read(_e.value, 2), i = _f[0], _g = __read(_f[1], 2), lineOffset = _g[0], line = _g[1];\n                var div = document.createElement('div');\n                var chunks = __spreadArray([[lineOffset, line.length, '']], __read(this._highlights));\n                if (i === this._cursor[2]) {\n                    chunks.push([lineOffset + this._cursor[0], 1, 'cursor']);\n                }\n                try {\n                    for (var _h = (e_2 = void 0, __values(Array.from(Utils_1.default.merge(lineOffset, line.length + 1, chunks)))), _j = _h.next(); !_j.done; _j = _h.next()) {\n                        var _k = __read(_j.value, 3), offset = _k[0], length_1 = _k[1], classes = _k[2];\n                        var span = document.createElement('span');\n                        try {\n                            for (var classes_1 = (e_3 = void 0, __values(classes)), classes_1_1 = classes_1.next(); !classes_1_1.done; classes_1_1 = classes_1.next()) {\n                                var className = classes_1_1.value;\n                                if (className !== '') {\n                                    span.classList.add(className);\n                                }\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (classes_1_1 && !classes_1_1.done && (_c = classes_1.return)) _c.call(classes_1);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                        span.textContent = line.slice(offset - lineOffset, offset - lineOffset + length_1) || ' ';\n                        div.appendChild(span);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                this._elem.appendChild(div);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return Editor;\n}());\nexports.default = Editor;\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/Editor.js?");

/***/ }),

/***/ "./node_modules/ts-nano/dist/LineIndices.js":
/*!**************************************************!*\
  !*** ./node_modules/ts-nano/dist/LineIndices.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar LineIndices = /** @class */ (function () {\n    function LineIndices(rope) {\n        this.offset = 0;\n        this.content = rope.toString();\n    }\n    LineIndices.prototype.next = function () {\n        if (this.content !== undefined) {\n            var idx = this.content.indexOf('\\n');\n            if (idx !== -1) {\n                if (this.content[idx - 1] === '\\r') {\n                    var line = this.content.slice(0, idx - 1);\n                    var offset = this.offset;\n                    this.content = this.content.slice(idx + 1);\n                    this.offset += idx + 1;\n                    return {\n                        done: false,\n                        value: [offset, line],\n                    };\n                }\n                else {\n                    var line = this.content.slice(0, idx);\n                    var offset = this.offset;\n                    this.content = this.content.slice(idx + 1);\n                    this.offset += idx + 1;\n                    return {\n                        done: false,\n                        value: [offset, line],\n                    };\n                }\n            }\n            else {\n                var line = this.content;\n                var offset = this.offset;\n                this.content = undefined;\n                return {\n                    done: false,\n                    value: [offset, line],\n                };\n            }\n        }\n        else {\n            return {\n                done: true,\n                value: null,\n            };\n        }\n    };\n    LineIndices.prototype[Symbol.iterator] = function () {\n        return this;\n    };\n    return LineIndices;\n}());\nexports.default = LineIndices;\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/LineIndices.js?");

/***/ }),

/***/ "./node_modules/ts-nano/dist/Lines.js":
/*!********************************************!*\
  !*** ./node_modules/ts-nano/dist/Lines.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Lines = /** @class */ (function () {\n    function Lines(rope) {\n        this.content = rope.toString();\n    }\n    Lines.prototype.next = function () {\n        if (this.content !== undefined) {\n            var idx = this.content.indexOf('\\n');\n            if (idx !== -1) {\n                if (this.content[idx - 1] === '\\r') {\n                    var line = this.content.slice(0, idx - 1);\n                    this.content = this.content.slice(idx + 1);\n                    return {\n                        done: false,\n                        value: line,\n                    };\n                }\n                else {\n                    var line = this.content.slice(0, idx);\n                    this.content = this.content.slice(idx + 1);\n                    return {\n                        done: false,\n                        value: line,\n                    };\n                }\n            }\n            else {\n                var line = this.content;\n                this.content = undefined;\n                return {\n                    done: false,\n                    value: line,\n                };\n            }\n        }\n        else {\n            return {\n                done: true,\n                value: null,\n            };\n        }\n    };\n    Lines.prototype[Symbol.iterator] = function () {\n        return this;\n    };\n    return Lines;\n}());\nexports.default = Lines;\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/Lines.js?");

/***/ }),

/***/ "./node_modules/ts-nano/dist/Rope.js":
/*!*******************************************!*\
  !*** ./node_modules/ts-nano/dist/Rope.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Lines_1 = __importDefault(__webpack_require__(/*! ./Lines */ \"./node_modules/ts-nano/dist/Lines.js\"));\nvar LineIndices_1 = __importDefault(__webpack_require__(/*! ./LineIndices */ \"./node_modules/ts-nano/dist/LineIndices.js\"));\nvar Utils_1 = __importDefault(__webpack_require__(/*! ./Utils */ \"./node_modules/ts-nano/dist/Utils.js\"));\nvar Rope = /** @class */ (function () {\n    function Rope(_node) {\n        this._node = _node;\n    }\n    Rope.leaf = function (content) {\n        if (content === void 0) { content = ''; }\n        return new Rope({\n            kind: 'leaf',\n            text: content,\n        });\n    };\n    Rope.branch = function (left, right) {\n        return new Rope({\n            kind: 'branch',\n            left: left,\n            right: right,\n        });\n    };\n    Object.defineProperty(Rope.prototype, \"length\", {\n        get: function () {\n            var _a, _b;\n            switch (this._node.kind) {\n                case 'branch':\n                    return (((_a = this._node.left) === null || _a === void 0 ? void 0 : _a.length) || 0) + (((_b = this._node.right) === null || _b === void 0 ? void 0 : _b.length) || 0);\n                case 'leaf':\n                    return this._node.text.length;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rope.prototype, \"weight\", {\n        get: function () {\n            var _a;\n            switch (this._node.kind) {\n                case 'branch':\n                    return ((_a = this._node.left) === null || _a === void 0 ? void 0 : _a.length) || 0;\n                case 'leaf':\n                    return this._node.text.length;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Rope.prototype.index = function (idx) {\n        switch (this._node.kind) {\n            case 'branch':\n                if (this.weight <= idx && this._node.right) {\n                    return this._node.right.index(idx - this.weight);\n                }\n                else if (this._node.left) {\n                    return this._node.left.index(idx);\n                }\n                else {\n                    throw 'unreachable: neither left/right of _node is defined';\n                }\n            case 'leaf':\n                return this._node.text[idx];\n        }\n    };\n    Rope.prototype.insert = function (idx, content) {\n        var tail = this.split(idx);\n        this.concat(Rope.leaf(content));\n        this.concat(tail);\n    };\n    Rope.prototype.remove = function (idx, len) {\n        if (len === void 0) { len = 1; }\n        var sub = this.split(idx);\n        var tail = sub.split(len);\n        this.concat(tail);\n    };\n    Rope.prototype.split = function (idx) {\n        switch (this._node.kind) {\n            case 'branch':\n                if (this.weight <= idx && this._node.right) {\n                    return this._node.right.split(idx - this.weight);\n                }\n                else if (this._node.left) {\n                    var tail = this._node.left.split(idx);\n                    if (this._node.right) {\n                        tail.concat(this._node.right);\n                    }\n                    this._node.right = null;\n                    return tail;\n                }\n                else {\n                    throw 'unreachable: neither left/right of _node is defined';\n                }\n            case 'leaf': {\n                var tail = Rope.leaf(this._node.text.slice(idx));\n                this._node.text = this._node.text.slice(0, idx);\n                return tail;\n            }\n        }\n    };\n    Rope.prototype.concat = function (tail) {\n        var head = this._node;\n        this._node = {\n            kind: 'branch',\n            left: new Rope(head),\n            right: tail,\n        };\n    };\n    Rope.prototype.lines = function () {\n        return new Lines_1.default(this);\n    };\n    Rope.prototype.lineIndices = function () {\n        return new LineIndices_1.default(this);\n    };\n    Rope.prototype.charToLine = function (char) {\n        var e_1, _a;\n        var end = 0;\n        var last = 0;\n        try {\n            for (var _b = __values(Utils_1.default.enumerate(this.lineIndices())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), i = _d[0], _e = __read(_d[1], 2), idx = _e[0], line = _e[1];\n                end = idx + line.length;\n                if (idx > char) {\n                    break;\n                }\n                last = i;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (char > end) {\n            throw new Error(\"char \" + char + \" is out of bounds\");\n        }\n        return last;\n    };\n    Rope.prototype.lineToChar = function (line) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Utils_1.default.enumerate(this.lineIndices())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), i = _d[0], _e = __read(_d[1], 1), char = _e[0];\n                if (i === line) {\n                    return char;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        throw new Error(\"line \" + line + \" is out of bounds\");\n    };\n    Rope.prototype.toString = function () {\n        var _a, _b;\n        switch (this._node.kind) {\n            case 'branch':\n                return (((_a = this._node.left) === null || _a === void 0 ? void 0 : _a.toString()) || '') + (((_b = this._node.right) === null || _b === void 0 ? void 0 : _b.toString()) || '');\n            case 'leaf':\n                return this._node.text;\n        }\n    };\n    return Rope;\n}());\nexports.default = Rope;\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/Rope.js?");

/***/ }),

/***/ "./node_modules/ts-nano/dist/Utils.js":
/*!********************************************!*\
  !*** ./node_modules/ts-nano/dist/Utils.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    Utils.enumerate = function (iter) {\n        var i, iter_1, iter_1_1, t, e_1_1;\n        var e_1, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    i = 0;\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 6, 7, 8]);\n                    iter_1 = __values(iter), iter_1_1 = iter_1.next();\n                    _b.label = 2;\n                case 2:\n                    if (!!iter_1_1.done) return [3 /*break*/, 5];\n                    t = iter_1_1.value;\n                    return [4 /*yield*/, [i++, t]];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4:\n                    iter_1_1 = iter_1.next();\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 8];\n                case 6:\n                    e_1_1 = _b.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 8];\n                case 7:\n                    try {\n                        if (iter_1_1 && !iter_1_1.done && (_a = iter_1.return)) _a.call(iter_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 8: return [2 /*return*/];\n            }\n        });\n    };\n    Utils.split = function (offset, length, spans) {\n        var spans_1, spans_1_1, _a, x1, x2, v, e_2_1;\n        var e_2, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _c.trys.push([0, 5, 6, 7]);\n                    spans_1 = __values(spans), spans_1_1 = spans_1.next();\n                    _c.label = 1;\n                case 1:\n                    if (!!spans_1_1.done) return [3 /*break*/, 4];\n                    _a = __read(spans_1_1.value, 3), x1 = _a[0], x2 = _a[1], v = _a[2];\n                    if (!(x1 <= offset + length && offset <= x1 + x2\n                        && Math.min(offset + length, x1 + x2) - Math.max(x1, offset) > 0)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, [\n                            Math.max(x1, offset),\n                            Math.min(offset + length, x1 + x2) - Math.max(x1, offset),\n                            v,\n                        ]];\n                case 2:\n                    _c.sent();\n                    _c.label = 3;\n                case 3:\n                    spans_1_1 = spans_1.next();\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 7];\n                case 5:\n                    e_2_1 = _c.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3 /*break*/, 7];\n                case 6:\n                    try {\n                        if (spans_1_1 && !spans_1_1.done && (_b = spans_1.return)) _b.call(spans_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                    return [7 /*endfinally*/];\n                case 7: return [2 /*return*/];\n            }\n        });\n    };\n    Utils.edges = function (spans) {\n        var e_3, _a;\n        var edges = [];\n        try {\n            for (var spans_2 = __values(spans), spans_2_1 = spans_2.next(); !spans_2_1.done; spans_2_1 = spans_2.next()) {\n                var _b = __read(spans_2_1.value, 3), offset = _b[0], length_1 = _b[1], className = _b[2];\n                if (edges[offset] === undefined) {\n                    edges[offset] = [[className], []];\n                }\n                else {\n                    edges[offset][0].push(className);\n                }\n                if (edges[offset + length_1] === undefined) {\n                    edges[offset + length_1] = [[], [className]];\n                }\n                else {\n                    edges[offset + length_1][1].push(className);\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (spans_2_1 && !spans_2_1.done && (_a = spans_2.return)) _a.call(spans_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return edges;\n    };\n    Utils.merge = function (offset, length, spans) {\n        var edges, classes, last, _a, _b, _c, offset_1, _d, add, remove, remove_1, remove_1_1, className, idx, e_4_1;\n        var e_4, _e, e_5, _f;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    edges = Utils.edges(Utils.split(offset, length, spans));\n                    classes = [];\n                    _g.label = 1;\n                case 1:\n                    _g.trys.push([1, 7, 8, 9]);\n                    _a = __values(Object.entries(edges)), _b = _a.next();\n                    _g.label = 2;\n                case 2:\n                    if (!!_b.done) return [3 /*break*/, 6];\n                    _c = __read(_b.value, 2), offset_1 = _c[0], _d = __read(_c[1], 2), add = _d[0], remove = _d[1];\n                    if (!(last !== undefined)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, [last, Number(offset_1) - last, new Set(classes)]];\n                case 3:\n                    _g.sent();\n                    _g.label = 4;\n                case 4:\n                    Array.prototype.push.apply(classes, add);\n                    try {\n                        for (remove_1 = (e_5 = void 0, __values(remove)), remove_1_1 = remove_1.next(); !remove_1_1.done; remove_1_1 = remove_1.next()) {\n                            className = remove_1_1.value;\n                            idx = classes.indexOf(className);\n                            if (idx === -1) {\n                                throw new Error(\"class never initialized: \" + className);\n                            }\n                            classes.splice(idx, 1);\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (remove_1_1 && !remove_1_1.done && (_f = remove_1.return)) _f.call(remove_1);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                    last = Number(offset_1);\n                    _g.label = 5;\n                case 5:\n                    _b = _a.next();\n                    return [3 /*break*/, 2];\n                case 6: return [3 /*break*/, 9];\n                case 7:\n                    e_4_1 = _g.sent();\n                    e_4 = { error: e_4_1 };\n                    return [3 /*break*/, 9];\n                case 8:\n                    try {\n                        if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                    return [7 /*endfinally*/];\n                case 9: return [2 /*return*/];\n            }\n        });\n    };\n    return Utils;\n}());\nexports.default = Utils;\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/Utils.js?");

/***/ }),

/***/ "./node_modules/ts-nano/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/ts-nano/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Editor = void 0;\nvar Editor_1 = __webpack_require__(/*! ./Editor */ \"./node_modules/ts-nano/dist/Editor.js\");\nObject.defineProperty(exports, \"Editor\", ({ enumerable: true, get: function () { return __importDefault(Editor_1).default; } }));\n\n\n//# sourceURL=webpack://dasha-web/./node_modules/ts-nano/dist/index.js?");

/***/ })

}]);